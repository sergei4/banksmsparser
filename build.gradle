import java.text.SimpleDateFormat

group 'com.skmmobile'
version '1.4.0'

apply plugin: 'java'
apply plugin: 'maven-publish'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
}

dependencies {
    testImplementation ("junit:junit:4.13.1")
}

apply plugin: 'org.hidetake.ssh'

buildscript {
    repositories {
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
    }

    dependencies {
        classpath 'org.hidetake:core:2.11.2'
    }
}

def props = new Properties()
file("local.properties").withInputStream { props.load(it) }

remotes {
    webServer {
        host = props."upload.host"
        user = props."upload.usr"
        password = props."upload.pwd"
    }
}

def srcXmlFile = "files/banksmspatterns.xml"
def outXmlFile = "$buildDir/files/banksmspatterns.xml"
def desFolder = props."upload.resFolder"

task updateDate {
    copy {
        from srcXmlFile
        into "$buildDir/files"
        def datePlaceholder='\\$\\{update_date\\}'
        def date = new Date()
        def dateFormatter = new SimpleDateFormat("yyyy/MM/dd HH:mm", Locale.getDefault())
        dateFormatter.setTimeZone(TimeZone.getTimeZone("Asia/Yekaterinburg"));

        filter { line -> line.replaceAll(datePlaceholder, dateFormatter.format(date)) }
    }

}

task uploadXmlOnServer(dependsOn: updateDate) {
    group = "delivery"
    doLast {
        if (file(outXmlFile).exists()) {
            ssh.run {
                session(remotes.webServer) {
                    put from: file(outXmlFile), into: desFolder
                }
            }
        } else {
            throw new RuntimeException("banksmspatterns.xml file doesn't exist in build directory")
        }
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    repositories {
        maven {
            url version.contains("SNAPSHOT") ? props."maven.repository.snaphot" : props."maven.repository"
            credentials.username props."maven.usr"
            credentials.password props."maven.pwd"
        }
    }

    publications {
        maven(MavenPublication) {
            artifactId 'banksmsparser'
            from components.java
        }
    }
}

dependencies {
    implementation "org.jetbrains:annotations:13.0"
}